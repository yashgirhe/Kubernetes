sudo -i
hostnamectl set-hostname master
bash
sudo -i
hostnamectl set-hostname worker1
bash
hostnamectl set-hostname worker2
bash


Step2 : (Fire on all nodes)

# disable swap (Fire on all nodes)
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
swapoff -a

Step3 : (Fire on all nodes)

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF
===================================================
Step4 : (Fire on all nodes)
sudo modprobe overlay
sudo modprobe br_netfilter
==================================================
Step5 : (Fire on all nodes)
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

Step6 : (Fire on all nodes)

sudo sysctl --system
lsmod | grep br_netfilter
lsmod | grep overlay
sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward
====
Step7 (Fire on all nodes-line by line)

apt update -y
sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt update
sudo apt install -y containerd.io
systemctl enable containerd
systemctl restart containerd
systemctl status containerd.service
containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
systemctl restart containerd
sudo systemctl enable containerd

========================
step8 (Fire on all nodes)

 23  sudo apt-get update
   24  sudo apt-get install -y apt-transport-https ca-certificates curl gpg
   25  curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
   26  echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
   27  sudo apt-get update
   28  sudo apt-get install -y kubelet kubeadm kubectl
   29  sudo apt-mark hold kubelet kubeadm kubectl
   30  sudo systemctl enable --now kubelet


   33  kubelet --version
   34  kubeadm version
   35  kubectl version



=======
step9 : only on master node

kubeadm config images pull --cri-socket /run/containerd/containerd.sock --kubernetes-version v1.29.0
kubeadm init --pod-network-cidr=10.244.0.0/16 --upload-certs --kubernetes-version=v1.29.0 --control-plane-endpoint=privateIPofMasternode --ignore-preflight-errors=Mem --cri-socket /run/containerd/containerd.sock


###Copy join(second) command from the output of above command and paste in notpad .
-------------------------------
below commands only on master:
 mkdir -p $HOME/.kube
 sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl get nodes
### paste copied join command on worker nodes
kubectl get nodes
====================

Step10 (Only fire on master nodes)
kubectl create -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
curl https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/canal.yaml -O
kubectl apply -f canal.yaml
